!(function (t) {
  'use strict'
  Modernizr.addTest('csstransformspreserve3d', function () {
    var e,
      i = Modernizr.prefixed('transformStyle'),
      s = 'preserve-3d'
    return (
      !!i &&
      ((i = i
        .replace(/([A-Z])/g, function (t, e) {
          return '-' + e.toLowerCase()
        })
        .replace(/^ms-/, '-ms-')),
      Modernizr.testStyles('#modernizr{' + i + ':' + s + ';}', function (s, n) {
        e = t.getComputedStyle
          ? getComputedStyle(s, null).getPropertyValue(i)
          : ''
      }),
      e === s)
    )
  })
  var e = Modernizr.csstransitions,
    i = Modernizr.csstransformspreserve3d,
    s = {
      WebkitTransition: 'webkitTransitionEnd',
      MozTransition: 'transitionend',
      OTransition: 'oTransitionEnd',
      msTransition: 'MSTransitionEnd',
      transition: 'transitionend'
    }[Modernizr.prefixed('transition')]
  function n(t, e) {
    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
    return t
  }
  function r(t) {
    for (var e = [], i = t.length, s = t[0].length, n = 0; n < i; n++)
      e = e.concat(t[n])
    e = (function (t) {
      var e,
        i,
        s = t.length
      for (; s; )
        (i = Math.floor(Math.random() * s--)),
          (e = t[s]),
          (t[s] = t[i]),
          (t[i] = e)
      return t
    })(e)
    for (var r = [], o = 0, a = 0; a < i; a++) {
      for (var h = [], l = 0; l < s; l++) h.push(e[o]), o++
      r.push(h)
    }
    return r
  }
  function o(t, e) {
    if (
      ((this.el = t),
      (this.inner = this.el.querySelector('div')),
      (this.allItems = [].slice.call(this.inner.children)),
      (this.allItemsCount = this.allItems.length),
      this.allItemsCount)
    ) {
      ;(this.items = [].slice.call(
        this.inner.querySelectorAll('figure:not([data-dummy])')
      )),
        (this.itemsCount = this.items.length),
        (this.options = n({}, this.options)),
        n(this.options, e),
        (this.current = this.options.start),
        this._init()
      var i = this
      return {
        showPhoto: function (t) {
          i._showPhoto.call(i, t)
        },
        open: function () {
          i._open.call(i, !0)
        },
        navigate: function (t) {
          i._navigate.call(i, t)
        }
      }
    }
  }
  ;(o.prototype.options = {
    start: 0,
    showNavigation: !0,
    afterInit: null,
    afterShowPhoto: null,
    afterNavigate: null
  }),
    (o.prototype._init = function () {
      ;(this.currentItem = this.items[this.current]),
        this.options.showNavigation && this._addNavigation(),
        this._getSizes(),
        this._initEvents(),
        this.options.afterInit && this.options.afterInit(this)
    }),
    (o.prototype._addNavigation = function () {
      this.nav = document.createElement('nav')
      for (var t = '', e = 0; e < this.itemsCount; ++e) t += '<span></span>'
      ;(this.nav.innerHTML = t),
        this.el.appendChild(this.nav),
        (this.navDots = [].slice.call(this.nav.children))
    }),
    (o.prototype._open = function (t) {
      var i = this,
        s = this.el,
        n = function () {
          e && classie.addClass(s, 'photostack-transition')
        }
      t
        ? (s.removeEventListener('click', open),
          classie.removeClass(s, 'photostack-start'),
          n())
        : ((i.openDefault = !0), setTimeout(n, 25)),
        (i.started = !0),
        i._showPhoto(i.current)
    }),
    (o.prototype._initEvents = function () {
      var e = this,
        i = classie.hasClass(this.el, 'photostack-start')
      i
        ? (this._shuffle(),
          this.el.addEventListener('click', function () {
            e._open(i)
          }))
        : this._open(i),
        this.options.showNavigation &&
          this.navDots.forEach(function (t, i) {
            t.addEventListener('click', function () {
              if (i === e.current) e._rotateItem()
              else {
                var t = function () {
                  e._showPhoto(i)
                }
                e.flipped ? e._rotateItem(t) : t()
              }
            })
          }),
        t.addEventListener('resize', function () {
          e._resizeHandler()
        })
    }),
    (o.prototype._resizeHandler = function () {
      var t = this
      this._resizeTimeout && clearTimeout(this._resizeTimeout),
        (this._resizeTimeout = setTimeout(function () {
          t._resize(), (t._resizeTimeout = null)
        }, 100))
    }),
    (o.prototype._resize = function () {
      var t = this,
        e = function () {
          t._shuffle(!0)
        }
      this._getSizes(), this.started && this.flipped ? this._rotateItem(e) : e()
    }),
    (o.prototype._showPhoto = function (t) {
      if (this.isShuffling) return !1
      ;(this.isShuffling = !0),
        classie.hasClass(this.currentItem, 'photostack-flip') &&
          (this._removeItemPerspective(),
          this.options.showNavigation &&
            classie.removeClass(this.navDots[this.current], 'flippable')),
        this.options.showNavigation &&
          classie.removeClass(this.navDots[this.current], 'current'),
        classie.removeClass(this.currentItem, 'photostack-current'),
        (this.current = t),
        (this.currentItem = this.items[this.current]),
        this.options.showNavigation &&
          classie.addClass(this.navDots[this.current], 'current'),
        this.options.showNavigation &&
          this.currentItem.querySelector('.photostack-back') &&
          classie.addClass(this.navDots[t], 'flippable'),
        this._shuffle(),
        this.options.afterShowPhoto && this.options.afterShowPhoto(this)
    }),
    (o.prototype._shuffle = function (t) {
      var i = t
        ? 1
        : this.currentItem.getAttribute('data-shuffle-iteration') || 1
      ;(i <= 0 || !this.started || this.openDefault) && (i = 1),
        this.openDefault &&
          (classie.addClass(this.currentItem, 'photostack-flip'),
          (this.openDefault = !1),
          (this.isShuffling = !1))
      var n = 0.5,
        o = Math.ceil(this.sizes.inner.width / (this.sizes.item.width * n)),
        a = Math.ceil(this.sizes.inner.height / (this.sizes.item.height * n)),
        h =
          o * this.sizes.item.width * n +
          this.sizes.item.width / 2 -
          this.sizes.inner.width,
        l =
          a * this.sizes.item.height * n +
          this.sizes.item.height / 2 -
          this.sizes.inner.height,
        c = h / 2,
        p = l / 2,
        f = -35,
        m = this,
        u = function () {
          --i
          for (var t = [], h = 0; h < a; ++h)
            for (var l = (t[h] = []), d = 0; d < o; ++d) {
              var v = d * (m.sizes.item.width * n) - c,
                g = h * (m.sizes.item.height * n) - p,
                I = 0,
                y = 0
              if (m.started && 0 === i) {
                var z = m._isOverlapping({ x: v, y: g })
                if (z.overlapping)
                  switch (
                    ((I = z.noOverlap.x),
                    (y = z.noOverlap.y),
                    Math.floor(3 * Math.random()))
                  ) {
                    case 0:
                      I = 0
                      break
                    case 1:
                      y = 0
                  }
              }
              l[d] = { x: v + I, y: g + y }
            }
          t = r(t)
          var x = 0,
            w = 0,
            _ = 0
          m.allItems.forEach(function (n, r) {
            x === o - 1 ? ((w = w === a - 1 ? 0 : w + 1), (x = 1)) : ++x
            Math.floor(Math.random() * o), Math.floor(Math.random() * a)
            var h = t[w][x - 1],
              l = h.x,
              c = h.y,
              p = function () {
                ++_,
                  e && this.removeEventListener(s, p),
                  _ === m.allItemsCount &&
                    (i > 0
                      ? u.call()
                      : (classie.addClass(m.currentItem, 'photostack-flip'),
                        (m.isShuffling = !1),
                        'function' == typeof m.options.callback &&
                          m.options.callback(m.currentItem)))
              }
            m.items.indexOf(n) === m.current && m.started && 0 === i
              ? ((m.currentItem.style.WebkitTransform =
                  'translate(' +
                  m.centerItem.x +
                  'px,' +
                  m.centerItem.y +
                  'px) rotate(0deg)'),
                (m.currentItem.style.msTransform =
                  'translate(' +
                  m.centerItem.x +
                  'px,' +
                  m.centerItem.y +
                  'px) rotate(0deg)'),
                (m.currentItem.style.transform =
                  'translate(' +
                  m.centerItem.x +
                  'px,' +
                  m.centerItem.y +
                  'px) rotate(0deg)'),
                m.currentItem.querySelector('.photostack-back') &&
                  m._addItemPerspective(),
                classie.addClass(m.currentItem, 'photostack-current'))
              : ((n.style.WebkitTransform =
                  'translate(' +
                  l +
                  'px,' +
                  c +
                  'px) rotate(' +
                  Math.floor(71 * Math.random() + f) +
                  'deg)'),
                (n.style.msTransform =
                  'translate(' +
                  l +
                  'px,' +
                  c +
                  'px) rotate(' +
                  Math.floor(71 * Math.random() + f) +
                  'deg)'),
                (n.style.transform =
                  'translate(' +
                  l +
                  'px,' +
                  c +
                  'px) rotate(' +
                  Math.floor(71 * Math.random() + f) +
                  'deg)')),
              m.started && (e ? n.addEventListener(s, p) : p())
          })
        }
      u.call()
    }),
    (o.prototype._navigate = function (t) {
      var e = this.current,
        i = this.itemsCount - 1,
        s = 0
      'next' == t
        ? (s = e < i ? e + 1 : 0)
        : 'prev' == t && (s = e > 0 ? e - 1 : i),
        this._showPhoto(s),
        this.options.afterNavigate && this.options.afterNavigate(this)
    }),
    (o.prototype._getSizes = function () {
      ;(this.sizes = {
        inner: {
          width: this.inner.offsetWidth,
          height: this.inner.offsetHeight
        },
        item: {
          width: this.currentItem.offsetWidth,
          height: this.currentItem.offsetHeight
        }
      }),
        (this.centerItem = {
          x: this.sizes.inner.width / 2 - this.sizes.item.width / 2,
          y: this.sizes.inner.height / 2 - this.sizes.item.height / 2
        })
    }),
    (o.prototype._isOverlapping = function (t) {
      var e = this.sizes.item.width + this.sizes.item.width / 3,
        i = this.sizes.item.height + this.sizes.item.height / 3,
        s = this.sizes.inner.width / 2 - e / 2,
        n = this.sizes.inner.height / 2 - i / 2,
        r = this.sizes.item.width,
        o = this.sizes.item.height
      if (!(t.x + r < s || t.x > s + e || t.y + o < n || t.y > n + i)) {
        var a = Math.random() < 0.5,
          h = Math.floor(Math.random() * (r / 4 + 1)),
          l = Math.floor(Math.random() * (o / 4 + 1))
        return {
          overlapping: !0,
          noOverlap: {
            x: a ? -1 * (t.x - s + r) - h : s + e - (t.x + r) + r + h,
            y: a ? -1 * (t.y - n + o) - l : n + i - (t.y + o) + o + l
          }
        }
      }
      return { overlapping: !1 }
    }),
    (o.prototype._addItemPerspective = function () {
      classie.addClass(this.el, 'photostack-perspective')
    }),
    (o.prototype._removeItemPerspective = function () {
      classie.removeClass(this.el, 'photostack-perspective'),
        classie.removeClass(this.currentItem, 'photostack-flip')
    }),
    (o.prototype._rotateItem = function (t) {
      if (
        classie.hasClass(this.el, 'photostack-perspective') &&
        !this.isRotating &&
        !this.isShuffling
      ) {
        this.isRotating = !0
        var n = this,
          r = function () {
            e && i && this.removeEventListener(s, r),
              (n.isRotating = !1),
              'function' == typeof t && t()
          }
        this.flipped
          ? (this.options.showNavigation &&
              classie.removeClass(this.navDots[this.current], 'flip'),
            i
              ? ((this.currentItem.style.WebkitTransform =
                  'translate(' +
                  this.centerItem.x +
                  'px,' +
                  this.centerItem.y +
                  'px) rotateY(0deg)'),
                (this.currentItem.style.transform =
                  'translate(' +
                  this.centerItem.x +
                  'px,' +
                  this.centerItem.y +
                  'px) rotateY(0deg)'))
              : classie.removeClass(this.currentItem, 'photostack-showback'))
          : (this.options.showNavigation &&
              classie.addClass(this.navDots[this.current], 'flip'),
            i
              ? ((this.currentItem.style.WebkitTransform =
                  'translate(' +
                  this.centerItem.x +
                  'px,' +
                  this.centerItem.y +
                  'px) translate(' +
                  this.sizes.item.width +
                  'px) rotateY(-179.9deg)'),
                (this.currentItem.style.transform =
                  'translate(' +
                  this.centerItem.x +
                  'px,' +
                  this.centerItem.y +
                  'px) translate(' +
                  this.sizes.item.width +
                  'px) rotateY(-179.9deg)'))
              : classie.addClass(this.currentItem, 'photostack-showback')),
          (this.flipped = !this.flipped),
          e && i ? this.currentItem.addEventListener(s, r) : r()
      }
    }),
    (t.Photostack = o)
})(window)
